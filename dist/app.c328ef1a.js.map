{"version":3,"sources":["app.js"],"names":["listItems","document","querySelectorAll","options","rootMargin","threshold","observer","IntersectionObserver","showItem","entries","forEach","entry","isIntersecting","letters","target","letter","idx","setTimeout","classList","add","children","item","newString","itemText","innerHTML","split","map","console","log","observe"],"mappings":";;;;;;;;;;;;AAAA;AAEA,IAAIA,SAAS,sBAAOC,QAAQ,CAACC,gBAAT,CAA0B,IAA1B,CAAP,CAAb,EACA;;;AAEIC,OAAO,GAAG;AACNC,EAAAA,UAAU,EAAE,MADN;AAENC,EAAAA,SAAS,EAAE;AAFL,CAAV;AAKAC,QAAQ,GAAG,IAAIC,oBAAJ,CAAyBC,QAAzB,EAAmCL,OAAnC,CAAX;;AAEJ,SAASK,QAAT,CAAkBC,OAAlB,EAA0B;AACtB;AACAA,EAAAA,OAAO,CAACC,OAAR,CAAgB,UAAAC,KAAK,EAAI;AACrB,QAAGA,KAAK,CAACC,cAAT,EAAwB;AACpB,UAAIC,OAAO,sBAAOF,KAAK,CAACG,MAAN,CAAaZ,gBAAb,CAA8B,MAA9B,CAAP,CAAX;;AACAW,MAAAA,OAAO,CAACH,OAAR,CAAgB,UAACK,MAAD,EAASC,GAAT,EAAiB;AAC7BC,QAAAA,UAAU,CAAC,YAAM;AACbF,UAAAA,MAAM,CAACG,SAAP,CAAiBC,GAAjB,CAAqB,QAArB;AACH,SAFS,EAEPH,GAAG,GAAG,EAFC,CAAV;AAGH,OAJD;AAKAL,MAAAA,KAAK,CAACG,MAAN,CAAaM,QAAb,CAAsB,CAAtB,EAAyBF,SAAzB,CAAmCC,GAAnC,CAAuC,QAAvC;AACH;AACJ,GAVD;AAWH;;AAAA;AAEDnB,SAAS,CAACU,OAAV,CAAkB,UAAAW,IAAI,EAAI;AACtB,MAAIC,SAAS,GAAG,EAAhB;AACIC,EAAAA,QAAQ,GAAGF,IAAI,CAACD,QAAL,CAAc,CAAd,EAAiBI,SAAjB,CAA2BC,KAA3B,CAAiC,EAAjC,CAAX;AACJF,EAAAA,QAAQ,CAACG,GAAT,CAAa,UAAAX,MAAM;AAAA,WAAKO,SAAS,IAAIP,MAAM,IAAI,GAAV,mDAAuDA,MAAvD,YAAlB;AAAA,GAAnB;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYL,QAAZ;AACAF,EAAAA,IAAI,CAACG,SAAL,GAAiBF,SAAjB;AACAhB,EAAAA,QAAQ,CAACuB,OAAT,CAAiBR,IAAjB;AACH,CAPD","file":"app.c328ef1a.js","sourceRoot":"..\\src","sourcesContent":["// Doc : https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API\r\n\r\nlet listItems = [...document.querySelectorAll(\"li\")];\r\n// console.log(listItems);\r\n\r\n    options = {\r\n        rootMargin: '-10%',\r\n        threshold: 0.0\r\n    };\r\n\r\n    observer = new IntersectionObserver(showItem, options);\r\n\r\nfunction showItem(entries){\r\n    // console.log(entries)\r\n    entries.forEach(entry => {\r\n        if(entry.isIntersecting){\r\n            let letters = [...entry.target.querySelectorAll(\"span\")];\r\n            letters.forEach((letter, idx) => {\r\n                setTimeout(() => {\r\n                    letter.classList.add(\"active\")\r\n                }, idx * 10);\r\n            })\r\n            entry.target.children[0].classList.add(\"active\")\r\n        }\r\n    })\r\n};\r\n\r\nlistItems.forEach(item => {\r\n    let newString = \"\";\r\n        itemText = item.children[0].innerHTML.split(\"\");\r\n    itemText.map(letter => (newString += letter == \" \" ? `<span class=\"gap\"></span>` : `<span>${letter}</span>`));\r\n    console.log(itemText);\r\n    item.innerHTML = newString;\r\n    observer.observe(item)\r\n})"]}